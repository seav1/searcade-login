name: Auto Login to Searcade

on:
  schedule:
    # 每三天执行一次，UTC时间00:00
    - cron: '0 0 */3 * *'
  workflow_dispatch:  # 允许手动触发
  push:
    branches: [ main ]  # 有修改时也执行
  pull_request:
    branches: [ main ]

jobs:
  login:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install Playwright
      run: |
        npm init -y
        npm install playwright
        npx playwright install chromium
        
    - name: Auto Login
      env:
        LOGIN_EMAIL: ${{ secrets.LOGIN_EMAIL }}
        LOGIN_PASSWORD: ${{ secrets.LOGIN_PASSWORD }}
      run: |
        cat > login.js << 'EOF'
        const { chromium } = require('playwright');
        
        (async () => {
          const browser = await chromium.launch();
          const page = await browser.newPage();
          
          try {
            console.log('访问登录页面...');
            await page.goto('https://searcade.userveria.com/login');
            
            console.log('等待页面加载...');
            await page.waitForLoadState('networkidle');
            
            // 额外等待，确保动态内容加载完成
            await page.waitForTimeout(5000);
            
            console.log('页面加载完成，开始调试...');
            
            // 获取页面标题
            const title = await page.title();
            console.log('页面标题:', title);
            
            // 获取当前URL
            const currentUrl = page.url();
            console.log('当前URL:', currentUrl);
            
            // 截图保存（用于调试）
            await page.screenshot({ path: 'login-page.png' });
            console.log('已保存页面截图');
            
            // 获取页面HTML内容
            const htmlContent = await page.content();
            console.log('页面HTML长度:', htmlContent.length);
            console.log('页面HTML内容（前2000字符）:');
            console.log(htmlContent.substring(0, 2000));
            
            // 检查是否包含预期的输入框
            const hasEmailInput = htmlContent.includes('id="email_input"');
            const hasPasswordInput = htmlContent.includes('id="password_input"');
            console.log('页面是否包含email_input:', hasEmailInput);
            console.log('页面是否包含password_input:', hasPasswordInput);
            
            // 获取所有input元素
            const inputs = await page.locator('input').all();
            console.log('页面input元素数量:', inputs.length);
            
            for (let i = 0; i < inputs.length; i++) {
              const input = inputs[i];
              const id = await input.getAttribute('id');
              const name = await input.getAttribute('name');
              const type = await input.getAttribute('type');
              const className = await input.getAttribute('class');
              console.log(`Input ${i}: id="${id}", name="${name}", type="${type}", class="${className}"`);
            }
            
            // 如果找不到输入框，可能是页面结构不同，尝试继续
            if (inputs.length === 0) {
              console.log('❌ 页面没有任何input元素');
              process.exit(1);
            }
            
            console.log('尝试查找邮箱输入框...');
            let emailInput = null;
            
            // 按顺序尝试不同的选择器
            const emailSelectors = [
              '#email_input',
              'input[name="email"]',
              'input[type="email"]',
              'input[type="text"]'
            ];
            
            for (const selector of emailSelectors) {
              try {
                const element = page.locator(selector);
                const count = await element.count();
                console.log(`选择器 ${selector} 找到 ${count} 个元素`);
                
                if (count > 0) {
                  emailInput = element.first();
                  console.log(`✅ 找到邮箱输入框: ${selector}`);
                  break;
                }
              } catch (e) {
                console.log(`选择器 ${selector} 出错:`, e.message);
              }
            }
            
            if (!emailInput) {
              console.log('❌ 所有选择器都未找到邮箱输入框');
              process.exit(1);
            }
            
            console.log('填写邮箱...');
            await emailInput.fill(process.env.LOGIN_EMAIL);
            
            console.log('查找密码输入框...');
            let passwordInput = null;
            
            const passwordSelectors = [
              '#password_input',
              'input[name="password"]',
              'input[type="password"]'
            ];
            
            for (const selector of passwordSelectors) {
              try {
                const element = page.locator(selector);
                const count = await element.count();
                console.log(`选择器 ${selector} 找到 ${count} 个元素`);
                
                if (count > 0) {
                  passwordInput = element.first();
                  console.log(`✅ 找到密码输入框: ${selector}`);
                  break;
                }
              } catch (e) {
                console.log(`选择器 ${selector} 出错:`, e.message);
              }
            }
            
            if (!passwordInput) {
              console.log('❌ 所有选择器都未找到密码输入框');
              process.exit(1);
            }
            
            console.log('填写密码...');
            await passwordInput.fill(process.env.LOGIN_PASSWORD);
            
            console.log('查找并点击登录按钮...');
            const buttonSelectors = [
              'button[type="submit"]',
              'input[type="submit"]',
              'button:has-text("Login")',
              'button:has-text("登录")',
              '.btn-primary',
              'button'
            ];
            
            let buttonClicked = false;
            for (const selector of buttonSelectors) {
              try {
                const element = page.locator(selector);
                const count = await element.count();
                console.log(`按钮选择器 ${selector} 找到 ${count} 个元素`);
                
                if (count > 0) {
                  await element.first().click();
                  console.log(`✅ 点击了按钮: ${selector}`);
                  buttonClicked = true;
                  break;
                }
              } catch (e) {
                console.log(`按钮选择器 ${selector} 出错:`, e.message);
              }
            }
            
            if (!buttonClicked) {
              console.log('未找到登录按钮，尝试按Enter键...');
              await page.keyboard.press('Enter');
            }
            
            console.log('等待登录完成...');
            await page.waitForLoadState('networkidle');
            
            console.log('检查登录结果...');
            const finalUrl = page.url();
            console.log('最终URL:', finalUrl);
            
            if (finalUrl.includes('searcade.com/en/admin')) {
              console.log('✅ 登录成功！');
            } else {
              console.log('❌ 登录失败，当前URL:', finalUrl);
              process.exit(1);
            }
            
          } catch (error) {
            console.error('❌ 登录失败:', error.message);
            process.exit(1);
          } finally {
            await browser.close();
          }
        })();
        EOF
        
        node login.js
